{
  "name": "download",
  "version": "0.1.17",
  "description": "Download and extract files effortlessly",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/kevva/download"
  },
  "author": {
    "name": "Kevin Mårtensson",
    "email": "kevinmartensson@gmail.com",
    "url": "https://github.com/kevva"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "bin": {
    "download": "cli.js"
  },
  "scripts": {
    "test": "mocha --reporter list"
  },
  "files": [
    "cli.js",
    "index.js"
  ],
  "keywords": [
    "download",
    "extract",
    "http",
    "request",
    "url"
  ],
  "dependencies": {
    "decompress": "^0.2.0",
    "each-async": "^0.1.1",
    "get-stdin": "^0.1.0",
    "get-urls": "^0.1.1",
    "mkdirp": "^0.3.5",
    "nopt": "^2.2.0",
    "request": "^2.34.0",
    "through2": "^0.4.0"
  },
  "devDependencies": {
    "mocha": "^1.18.2",
    "nock": "^0.27.1",
    "rimraf": "^2.2.5"
  },
  "readme": "# download [![Build Status](https://travis-ci.org/kevva/download.svg?branch=master)](https://travis-ci.org/kevva/download)\r\n\r\n> Download and extract files effortlessly\r\n\r\n## Install\r\n\r\n```bash\r\n$ npm install --save download\r\n```\r\n\r\n## Usage\r\n\r\nIf you're fetching an archive you can set `extract: true` in options and\r\nit'll extract it for you.\r\n\r\n```js\r\nvar download = require('download');\r\n\r\n// download and extract `foo.tar.gz` into `bar/`\r\ndownload('foo.tar.gz', 'bar', { extract: true });\r\n\r\n// download and save `foo.exe` into `bar/foo.exe` with mode `0755`\r\ndownload('foo.exe', 'bar', { mode: '0755' });\r\n\r\n// download and save `foo.zip` into `bar/foobar.zip`\r\ndownload({ url: 'foo.zip', name: 'foobar.zip' }, 'bar');\r\n\r\n// download and save an array of files in `bar/`\r\nvar files = ['foo.jpg', 'bar.jpg', 'cat.jpg'];\r\ndownload(files, 'bar');\r\n\r\n// download, save and rename an array of files in `bar/`\r\nvar files = [{\r\n    url: 'foo.jpg',\r\n    name: 'foobar.jpg'\r\n}, {\r\n    url: 'cat.jpg',\r\n    name: 'dog.jpg'\r\n}];\r\ndownload(files, 'bar');\r\n```\r\n\r\n## API\r\n\r\n### download(url, dest, opts)\r\n\r\nDownload a file or an array of files to a given destination. Returns an EventEmitter\r\nthat emits the following possible events:\r\n\r\n* `response` — Relayed when the underlying `http.ClientRequest` emits the same\r\nevent. Listeners called with a `http.IncomingMessage` instance.\r\n* `data` — Relayed when the underlying `http.IncomingMessage` emits the same\r\nevent. Listeners called with a `Buffer` instance.\r\n* `error` — Relayed when the underlying `http.ClientRequest` emits the same event\r\nor when the response status code is not in the 200s. Listeners called with an\r\n`Error` instance (in the first case) or the response status code.\r\n* `close` — Relayed when the underlying `stream.Duplex` emits the same event.\r\n\r\n## Options\r\n\r\nYou can define options accepted by the [request](https://github.com/mikeal/request/) module besides from the options below.\r\n\r\n### extract\r\n\r\nType: `Boolean`  \r\nDefault: `false`\r\n\r\nIf set to `true`, try extracting the file using [decompress](https://github.com/kevva/decompress/).\r\n\r\n### mode\r\n\r\nType: `String`  \r\nDefault: `undefined`\r\n\r\nSet mode on the downloaded files.\r\n\r\n### strip\r\n\r\nType: `Number`  \r\nDefault: `0`\r\n\r\nEquivalent to `--strip-components` for tar.\r\n\r\n## CLI\r\n\r\n```bash\r\n$ npm install --global download\r\n```\r\n\r\n```bash\r\n$ download --help\r\n\r\nUsage\r\n  $ download <url>\r\n  $ cat <file> | download>\r\n\r\nExample\r\n  $ download --out dist --extract https://github.com/kevva/download/archive/master.zip\r\n  $ cat urls.txt | download --out dist\r\n\r\nOptions\r\n  -e, --extract           Extract archive files on download\r\n  -o, --out               Path to download or extract the files to\r\n  -s, --strip <number>    Strip path segments from root when extracting\r\n```\r\n\r\n## License\r\n\r\nMIT © [Kevin Mårtensson](http://kevinmartensson.com)\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/kevva/download/issues"
  },
  "homepage": "https://github.com/kevva/download",
  "_id": "download@0.1.17",
  "_shasum": "c2516c92b05d0447364e9a9e0ea060edef79dc3a",
  "_from": "download@^0.1.2",
  "_resolved": "https://registry.npmjs.org/download/-/download-0.1.17.tgz"
}
