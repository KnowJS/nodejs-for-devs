{
  "name": "transformify",
  "version": "0.1.2",
  "description": "Takes a synchronous function that transforms a string and converts it into a transform compatible with browserify, catw and mutiny.",
  "main": "index.js",
  "scripts": {
    "test-main": "tap test/*.js",
    "test-0.8": "nave use 0.8 npm run test-main",
    "test-0.10": "nave use 0.10 npm run test-main",
    "test-all": "npm run test-main && npm run test-0.8 && npm run test-0.10",
    "test": "if [ -e $TRAVIS ]; then npm run test-all; else npm run test-main; fi"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/thlorenz/transformify.git"
  },
  "homepage": "https://github.com/thlorenz/transformify",
  "dependencies": {
    "readable-stream": "~1.1.9"
  },
  "devDependencies": {
    "nave": "~0.4.3",
    "tap": "~0.4.3",
    "apply-transform": "~0.1.3"
  },
  "keywords": [
    "transform",
    "stream",
    "browserify",
    "browserify-transform",
    "catw",
    "mutiny"
  ],
  "author": {
    "name": "Thorsten Lorenz",
    "email": "thlorenz@gmx.de",
    "url": "http://thlorenz.com"
  },
  "license": {
    "type": "MIT",
    "url": "https://github.com/thlorenz/transformify/blob/master/LICENSE"
  },
  "engine": {
    "node": ">=0.6"
  },
  "readme": "# transformify [![build status](https://secure.travis-ci.org/thlorenz/transformify.png)](http://travis-ci.org/thlorenz/transformify)\n\nTakes a synchronous function that transforms a string and converts it into a transform compatible with browserify, catw and mutiny.\n\n```js\nvar transformify = require('transformify');\n\nfunction toUpper(s) {\n  return s.toUpperCase();\n}\n\nrequire('fs').createReadStream(__filename)\n  .pipe(transformify(toUpper)(/* file not used */))\n  .pipe(process.stdout);\n```\n\n### Output\n\n```\nVAR TRANSFORMIFY = REQUIRE('TRANSFORMIFY')\n\nFUNCTION TOUPPER(S) {\n  RETURN S.TOUPPERCASE();\n}\n\nREQUIRE('FS').CREATEREADSTREAM(__FILENAME)\n  .PIPE(TRANSFORMIFY(TOUPPER)(/* FILE NOT USED */))\n  .PIPE(PROCESS.STDOUT);\n```\n\n## Installation\n\n    npm install transformify\n\n## API\n\n### transformify(fn)\n```\n/**\n * Takes a synchronous function that transforms a string and returns a transform compatible with browserify, catw and mutiny.\n * \n * @name transformify\n * @function\n * @param {Function(String):String} fn \n * @return {Function(String):TransformStream} function that returns a transform stream\n */\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/thlorenz/transformify/issues"
  },
  "_id": "transformify@0.1.2",
  "_shasum": "9a4f42a154433dd727b80575428a3c9e5489ebf1",
  "_from": "transformify@~0.1.1",
  "_resolved": "https://registry.npmjs.org/transformify/-/transformify-0.1.2.tgz"
}
